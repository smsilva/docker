name: ci-example-release-by-tag

on:
  workflow_dispatch:
    inputs:
      tag:
        description: Git tag to release
        required: true
      environment:
        description: Environment to run tests against
        type: environment
        required: true
        default: continuos-integration

jobs:
  release:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ inputs.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
     
      - name: Retrieve Original Commit SHA
        env:
          TAG: ${{ inputs.tag }}
        run: |
          echo "TAG.................: ${TAG}"

          ORIGINAL_COMMIT_SHA=$(
            git show ${TAG} \
              --pretty="%N" \
              --no-patch \
            | grep "original-commit-sha:" \
            | awk '{ print $2 }'
          )

          echo "ORIGINAL_COMMIT_SHA.: ${ORIGINAL_COMMIT_SHA}"

          # Save ORIGINAL_COMMIT_SHA
          echo "ORIGINAL_COMMIT_SHA=${ORIGINAL_COMMIT_SHA}" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Docker Image Name
        run: |
          DOCKER_IMAGE_NAME=ghcr.io/${{ github.repository }}:${ORIGINAL_COMMIT_SHA}

          echo "DOCKER_IMAGE_NAME=${DOCKER_IMAGE_NAME}" >> $GITHUB_ENV

          echo "ORIGINAL_COMMIT_SHA.: ${ORIGINAL_COMMIT_SHA}"
          echo "DOCKER_IMAGE_NAME...: ${DOCKER_IMAGE_NAME}"

      - name: Docker Pull
        run: |
          echo "DOCKER_IMAGE_NAME...: ${DOCKER_IMAGE_NAME}"

          docker pull ${DOCKER_IMAGE_NAME?}

      - name: Release Docker Image
        env:
          TAG: ${{ inputs.tag }}
        run: |
          DOCKER_BASE_NAME=$(awk -F ':' '{ print $1 }' <<< "${DOCKER_IMAGE_NAME}")
          DOCKER_IMAGE_RELEASE_NAME=${DOCKER_BASE_NAME}:${TAG}

          echo "TAG.......................: ${TAG}"
          echo "DOCKER_IMAGE_NAME.........: ${DOCKER_IMAGE_NAME}"
          echo "DOCKER_BASE_NAME..........: ${DOCKER_BASE_NAME}"
          echo "DOCKER_IMAGE_RELEASE_NAME.: ${DOCKER_IMAGE_RELEASE_NAME}"

          # Tag and push the Docker image
          docker tag ${DOCKER_IMAGE_NAME} ${DOCKER_IMAGE_RELEASE_NAME}
          docker push ${DOCKER_IMAGE_RELEASE_NAME}
